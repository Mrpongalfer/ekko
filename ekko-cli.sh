#!/bin/bash
set -eo pipefail

# ====================
# EKKO PROJECT GENERATOR
# ====================

# Validate arguments
if [ $# -lt 2 ]; then
    echo "Usage: $0 <project_name> <module_name> [test_requirements...]"
    exit 1
fi

PROJECT="$1"
FOCUS="$2"
TEST_REQS=("${@:3}")
SAFE_DIR="${PWD}/${PROJECT}"

# Create project structure
mkdir -p "${SAFE_DIR}"/{src,tests,scripts} || {
    echo "Error: Failed to create project directories"
    exit 1
}

# Generate README
cat > "${SAFE_DIR}/README.md" << EOF
# ${PROJECT}
Generated by Ekko CLI on $(date)

## Module: ${FOCUS}
Test Requirements:
- ${TEST_REQS[@]}
EOF

# Generate Python module
cat > "${SAFE_DIR}/src/${FOCUS}.py" << EOF
# Auto-generated by Ekko
def execute():
    """${FOCUS} implementation"""
    return {"status": "UNVALIDATED"}

# Test Requirements:
# ${TEST_REQS[@]}
EOF

# Generate test file
cat > "${SAFE_DIR}/tests/test_${FOCUS}.py" << EOF
import pytest
from src.${FOCUS} import execute

def test_${FOCUS}_basic():
    """Test generated from requirements: ${TEST_REQS[@]}"""
    result = execute()
    assert result["status"] != "UNVALIDATED", "Implementation missing"
EOF

# Generate validation script
cat > "${SAFE_DIR}/scripts/validate.sh" << EOF
#!/bin/bash
cd \$(dirname \$0)/..
if command -v python3 &>/dev/null; then
    python3 -m pytest tests/ -v
else
    python -m pytest tests/ -v
fi
EOF
chmod +x "${SAFE_DIR}/scripts/validate.sh"

# Success message
echo "ðŸ”¥ Ekko project '${PROJECT}' created at:"
echo "   ${SAFE_DIR}"
echo ""
echo "Next steps:"
echo "1. cd ${PROJECT}"
echo "2. Edit src/${FOCUS}.py to implement functionality"
echo "3. Run tests: ./scripts/validate.sh"
echo ""
echo "Need help? Run: ./scripts/validate.sh --help"