#!/usr/bin/env python3
# File: src/ekko/main.py
"""
Project Ekko - Main Entry Point Placeholder.
This might delegate to CLI, TUI, or API based on execution context or args.
"""

import logging
import os
import sys

# Basic logging setup
logging.basicConfig(level=os.environ.get("EKKO_LOG_LEVEL", "INFO").upper())
logger = logging.getLogger("ekko.main")


def run_cli():
    logger.info("Attempting to run CLI...")
    # This assumes 'ekko' command (from project.scripts) is installed/available
    # or directly calls the CLI function/app
    try:
        import typer

        from ekko.cli.main import app

        # In a real scenario, typer.run(app) might be called by the entry point script
        # generated by pip install -e .
        # For direct execution simulation:
        print("Simulating CLI run (normally via 'ekko' command)")
        # You might need to manually pass sys.argv or specific commands here for testing
        # app() # Running app() directly might not work as expected without CLI context
    except ImportError:
        logger.error("Could not import Ekko CLI components.")
        print("ERROR: Cannot run CLI - components missing.", file=sys.stderr)
    except Exception as e:
        logger.error(f"Error running CLI: {e}", exc_info=True)
        print(f"ERROR: Could not run CLI: {e}", file=sys.stderr)


if __name__ == "__main__":
    # Example: Decide based on an environment variable or argument
    run_mode = os.environ.get("EKKO_RUN_MODE", "cli").lower()
    logger.info(f"Ekko main entry point executed. Mode: {run_mode}")

    if run_mode == "cli":
        run_cli()
    elif run_mode == "api":
        print("To run API: use uvicorn ekko.api.main:app")
        # Could potentially start uvicorn here if needed via subprocess
    elif run_mode == "tui":
        print("To run TUI: python src/ekko/tui/main.py")
        # Could potentially start TUI here
    else:
        print(
            f"Unknown run mode: {run_mode}. Defaulting to CLI simulation.",
            file=sys.stderr,
        )
        run_cli()

    sys.exit(0)
